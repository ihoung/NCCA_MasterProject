<fragment  uiName="ETS_ShadingMapFragment" name="ETS_ShadingMapFragment" type="plumbing" class="ShadeFragment" version="1.0" feature_level="30" >
    <description>
<![CDATA[
Toon renderer. Uses pre-processed shade map to render the final shading color.]]>
    </description>
    <properties>
        <float3 name="Nw" flags="varyingInputParam" />
        <float3 name="Lw" />
        <float  name="ShadeThreshold" />
        <float  name="DiffuseSmoothness" />
        <float  name="EditIntensity" />
    </properties>
    <values>
        <float3 name="Lw" value="0.0,0.0,0.0" />
        <float name="ShadeThreshold" value="0.500000" />
        <float name="DiffuseSmoothness" value="0.400000" />
        <float name="EditIntensity" value="0.0" />
    </values>
    <outputs>
        <float3 name="output" />
    </outputs>
    <parametershare>
    </parametershare>
    <implementation >
    <implementation render="OGSRenderer" language="Cg" lang_version="2.100000" >
        <function_name val="ETSShadingMapFragment" />
        <source>
            <![CDATA[
float3 ETSShadingMapFragment(
    float3 Nw,
    float3 Lw,
    float ShadeThreshold,
    float DiffuseSmoothness,
    float EditIntensity
)
{
    float diffuse = dot(Nw, Lw);
    float diffuseSmooth = pow(DiffuseSmoothness, 5);
    float smoothedDiffuse = smoothstep(ShadeThreshold-diffuseSmooth, ShadeThreshold+diffuseSmooth, diffuse);
    float result = lerp(0.0f, 1.0f, smoothedDiffuse);
    return float3(EditIntensity, 1.0f, 1.0f);
}
            ]]>
        </source>
    </implementation>
    <implementation render="OGSRenderer" language="HLSL" lang_version="11.000000" >
        <function_name val="ETSShadingMapFragment" />
        <source>
            <![CDATA[
float3 ETSShadingMapFragment(
    float3 Nw,
    float3 Lw,
    float ShadeThreshold,
    float DiffuseSmoothness,
    float EditIntensity
)
{
    float diffuse = dot(Nw, Lw);
    float diffuseSmooth = pow(DiffuseSmoothness, 5);
    float smoothedDiffuse = smoothstep(ShadeThreshold-diffuseSmooth, ShadeThreshold+diffuseSmooth, diffuse);
    float result = lerp(0.0f, 1.0f, smoothedDiffuse);
    return float3(EditIntensity, 1.0f, 1.0f);
}
            ]]>
        </source>
    </implementation>
    <implementation render="OGSRenderer" language="GLSL" lang_version="3.000000" >
        <function_name val="ETSShadingMapFragment" />
        <source>
            <![CDATA[
vec3 ETSShadingMapFragment(
    vec3 Nw,
    vec3 Lw,
    float ShadeThreshold,
    float DiffuseSmoothness,
    float EditIntensity
)
{
    float diffuse = dot(Nw, Lw);
    float diffuseSmooth = pow(DiffuseSmoothness, 5);
    float smoothedDiffuse = smoothstep(ShadeThreshold-diffuseSmooth, ShadeThreshold+diffuseSmooth, diffuse);
    float result = lerp(0.0f, 1.0f, smoothedDiffuse);
    return vec3(EditIntensity, 1.0f, 1.0f);
}
            ]]>
        </source>
    </implementation>
    </implementation>
</fragment>

